/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2014 Cayde Dixon
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */




import groovy.json.JsonSlurper

buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://oss.sonatype.org/content/groups/public/'
        }
        maven {
            name 'Cazzar\'s Maven repo'
            url 'http://maven.cazzar.net/'
        }
    }

    dependencies {
        classpath 'net.cazzar:CurseForgeUploader:1.0'
    }
}

apply plugin: 'maven-publish'
apply plugin: 'curseforge'

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact javadocJar
            artifact deobfJar
            artifact sourceJar
        }
    }
    repositories {
        maven {
            url "file://home/cayde/www-data/cazzar.net/maven"
        }
    }
}


def getJenkinsChanges() {
    def jsonSlurper = new JsonSlurper();
    def url = new URL('http://direct.cazzar.net:8080/job/CazzarCore-1.7/lastBuild/api/json')
    def connection = url.openConnection();

    def reader = new BufferedReader(new InputStreamReader(connection.getInputStream()))
    def result = jsonSlurper.parse(reader)


    def data = new ArrayList<Object>()

    for (obj in result.changeSet.items) {
        data.add(obj.author.fullName + ": " + obj.msg)
    }

    def iter = data.iterator()
    StringBuilder val = new StringBuilder()
    while (iter.hasNext()) {
        val.append(iter.next()).append((iter.hasNext()) ? '\n' : '')
    }

    return val.toString()
}

uploadToCurseForge {
    //noinspection GrDeprecatedAPIUsage
    dependsOn "signJar"
    if (project.ext.has('curseAPI'))
        api_key project.ext['curseAPI']
    else
        api_key ''
    stub 'cazzarcorelib'
    artifact_name 'Version ' + actualVersion
    game_version minecraft.version
    artifact tasks.reobf.outputs.getFiles().getSingleFile()
    change_log "Rework for Minecraft 1.7"
}