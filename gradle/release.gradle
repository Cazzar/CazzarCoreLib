/*
 * Copyright (C) 2014 Cayde Dixon
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import groovy.json.JsonSlurper

buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://oss.sonatype.org/content/groups/public/'
        }
        maven {
            name 'Cazzar\'s Maven repo'
            url 'http://maven.cazzar.net/'
        }
    }

    dependencies {
        classpath 'net.cazzar:CurseForgeUploader:1.0'
    }
}

apply plugin: 'maven-publish'
apply plugin: 'curseforge'

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact javadocJar
            artifact deobfJar
            artifact sourceJar
        }
    }
    repositories {
        maven {
            url "file://home/cayde/www-data/cazzar.net/maven"
        }
    }
}


def getJenkinsChanges() {
    def jsonSlurper = new JsonSlurper();
    def url = new URL('http://direct.cazzar.net:8080/job/CazzarCore-1.7/lastBuild/api/json')
    def connection = url.openConnection();

    def reader = new BufferedReader(new InputStreamReader(connection.getInputStream()))
    def result = jsonSlurper.parse(reader)


    def data = new ArrayList<Object>()

    for (obj in result.changeSet.items) {
        data.add(obj.author.fullName + ": " + obj.msg)
    }

    def iter = data.iterator()
    StringBuilder val = new StringBuilder()
    while (iter.hasNext()) {
        val.append(iter.next()).append((iter.hasNext()) ? '\n' : '')
    }

    return val.toString()
}

uploadToCurseForge {
    dependsOn "signJar"
    if (project.ext.has('curseAPI'))
        api_key project.ext['curseAPI']
    else
        api_key ''
    stub 'cazzarcorelib'
    artifact_name 'Version ' + actualVersion
    game_version minecraft.version
    artifact tasks.reobf.outputs.getFiles().getSingleFile()
    change_log getJenkinsChanges()
}