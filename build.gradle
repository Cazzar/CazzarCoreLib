import org.ajoberstar.gradle.git.tasks.GitPush
import org.ajoberstar.gradle.git.tasks.GitTag

buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://oss.sonatype.org/content/groups/public/'
        }
        maven {
            name 'forge'
            url 'http://files.minecraftforge.net/maven'
        }
        maven {
            name 'Cazzar\'s Maven repo'
            url 'http://maven.cazzar.net/'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.1-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:0.7.0-SNAPSHOT'
        classpath 'net.cazzar:CurseForgeUploader:1.0'
    }
}

group = 'net.cazzar.corelib'
version = '1.1.0'
<<<<<<< HEAD
project.ext.set('actualVersion', version)
//noinspection GroovyUnusedAssignment
//archivesBaseName = 'CazzarCoreLib'

apply from: 'gradle/forge.gradle'
apply from: 'gradle/artifacts.gradle'
apply from: 'gradle/release.gradle'
apply from: 'gradle/signing.gradle'
apply plugin: 'grgit'
=======
def actualVersion = version
archivesBaseName = 'CazzarCoreLib'

minecraft { version = '1.6.4-9.11.1.964' }
logger.lifecycle "$archivesBaseName-$version"

if (System.getenv("BUILD_NUMBER") != null) {
    version = "${minecraft.version}-$version." + System.getenv("BUILD_NUMBER");
    actualVersion += "." + System.getenv("BUILD_NUMBER");
}
else if (new File(projectDir, '.git').exists()) {
    def repo = grgit.repo('.')
    version = "${minecraft.version}-$version-${repo.history.log().find().abbreviatedId}"
    actualVersion += "-${repo.history.log().find().abbreviatedId}"
} else {
    version = "${minecraft.version}-$version-DEV"
    actualVersion += "-DEV"
}

processResources {
    // replace stuff in text files, not binary ones.
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.lang'
        include '**/*.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
        // replace version and MCVersion
    }

    // copy everything else, that's not text
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.lang'
        exclude '**/*.info'
    }
}

//REGION: artifacts.
jar {
    classifier = 'universal'
    manifest {
        attributes FMLCorePlugin: "net.cazzar.corelib.CoreMod",
                "Implementation-Version": actualVersion
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'src'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
//    appendix = 'javadoc-' + project.minecraft.version
    classifier 'javadoc'
    from 'build/docs/javadoc'
}

// because the normal default jar task has been modified to be obfuscated
task deobfJar(type: Jar) {
    from sourceSets.main.output
    //Since this is now the main version.
    classifier = ''

    manifest {
         attributes FMLCorePlugin: "net.cazzar.corelib.CoreMod",
                "Implementation-Version": actualVersion
    }
}

artifacts {
    archives deobfJar
    archives javadocJar
}
//ENDREGION: artifacts.
//REGION: Wrapper info
wrapper {
    version = "1.8"
}
//ENDREGION: Wrapper info
>>>>>>> master

task tag(type: GitTag) {
    setTagName actualVersion
    setMessage "Release of ${version}"
}

task push(type: GitPush) {
    setPushTags true
}
